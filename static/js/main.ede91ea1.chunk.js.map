{"version":3,"sources":["utils/Button.js","redux/actions/dataActions.js","redux/types.js","components/scream/PostScream.js","redux/actions/userActions.js","components/layout/Notifications.js","components/layout/Navbar.js","utils/AuthRoute.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","utils/ProfileSkeleton.js","components/profile/Profile.js","utils/ScreamSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","App.js","utils/theme.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","onClick","tip","btnClassName","tipClassName","react_default","a","createElement","Tooltip","title","className","placement","IconButton","clearErrors","dispatch","type","PostScream","state","open","body","errors","handleOpen","_this","setState","handleClose","props","handleChange","e","Object","defineProperty","target","name","value","handleSubmit","preventDefault","postScream","nextProps","UI","this","loading","_this$props","classes","react","Add_default","Dialog","onClose","fullWidth","maxWidth","closeButton","Close_default","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","error","helperText","textField","onChange","variant","placeholder","InputLabelProps","shrink","Button_Button","color","submitButton","disabled","CircularProgress","size","progressSpinner","Component","connect","newScream","axios","post","then","res","payload","data","catch","err","response","withStyles","theme","position","left","top","marginTop","marginBottom","float","logoutUser","localStorage","removeItem","defaults","headers","common","getUserData","get","console","log","setAuthorizationHeader","token","FBIdToken","concat","setItem","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","notifications","filter","not","read","map","notificationId","markNotificationsRead","notificationIcon","_this2","dayjs","extend","relativeTime","length","Badge","badgeContent","Notifications_default","notifcationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","Favorite_default","style","marginRight","Chat_default","MenuItem","key","Typography","component","Link","to","recipient","screamId","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","user","notificationIds","Navbar","authenticated","AppBar","Toolbar","scream_PostScream","react_router_dom","Home_default","layout_Notifications","rest","objectWithoutProperties","react_router","assign","render","initialState","credentials","likes","screams","scream","middleware","thunk","reducers","combineReducers","arguments","action","objectSpread","toConsumableArray","userHandle","handle","like","forEach","index","findIndex","i","splice","comments","store","createStore","applyMiddleware","apply","DeleteScream","deleteScream","deleteButton","DeleteOutline_default","DialogActions","delete","LikeButton","handleMenu","currentTarget","likedScream","find","likeScream","unlikeScream","fontSize","FavoriteBorder_default","mapActionsToProps","Comments","Grid","container","main","comment","userImage","item","sm","src","alt","commentImage","commentData","format","hiddenHR","HRVisible","height","objectFit","borderRadius","padding","border","margin","marginLeft","width","borderBottom","CommentForm","submitComment","textAlign","button","ScreamDialog","oldPath","newPath","window","location","pathname","history","pushState","getScream","openDialog","_this$props2","_this$props2$scream","likeCount","commentCount","dialogMarkup","load","spacing","profileImage","scream_CommentForm","scream_Comments","expandButton","UnfoldMore_default","dialogContent","Scream","_this$props$scream","_this$props$user","scream_DeleteScream","Card","card","CardMedia","image","CardContent","content","scream_LikeButton","scream_ScreamDialog","display","minWidth","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","edit","paper","profile","& .image-wrapper","& .button","boxShadow","cursor","& .profile-image","& .profile-details","& span, svg","verticalAlign","& a","palette","primary","& hr","& svg.button","&:hover","buttons","backgroundColor","fullLine","halfLine","Paper","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditImage","document","getElementById","click","handleLogout","_this$props$user$cred","imageUrl","utils_ProfileSkeleton","id","hidden","Edit_default","LocationOn_default","Link_default","href","rel","CalendarToday_default","profile_EditDetails","align","& button","cardContent","flexDirection","cover","date","Array","from","home","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","getScreams","_this$props$data","recentScreams","utils_ScreamSkeleton","scream_Scream","xs","profile_Profile","login","email","password","userData","loginUser","form","pageTitle","noValidate","general","customError","progress","signupRedirect","push","signup","confirmPassword","newUserData","signupUser","_props$profile","screamIdParam","match","params","screamsMarkup","profile_StaticProfile","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","baseURL","jwtDecode","exp","Date","now","App","MuiThemeProvider_default","es","layout_Navbar","exact","path","utils_AuthRoute","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ede91ea1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n    <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n)\r\n","import { \r\n    SET_SCREAMS, \r\n    LOADING_DATA, \r\n    LIKE_SCREAM, \r\n    UNLIKE_SCREAM,\r\n    DELETE_SCREAM,\r\n    POST_SCREAM,\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    SET_SCREAM,\r\n    STOP_LOADING_UI,\r\n    SUBMIT_COMMENT\r\n } from \"../types\";\r\nimport axios from \"axios\";\r\n\r\n\r\n// Get all screams\r\nexport const getScreams = () => dispatch => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(\"/screams\")\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: []\r\n        })\r\n    })\r\n};\r\n\r\nexport const getScream = screamId => dispatch => {\r\n    dispatch({\r\n        type: LOADING_UI\r\n    });\r\n    axios.get(`/scream/${screamId}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAM,\r\n            payload: res.data\r\n        })\r\n        dispatch({ type: STOP_LOADING_UI })\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n// Post a Scream\r\nexport const postScream = (newScream) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n      .post('/scream', newScream)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: POST_SCREAM,\r\n          payload: res.data\r\n        });\r\n        dispatch(clearErrors());\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  };\r\n\r\n// Like a scream\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n    axios\r\n      .get(`/scream/${screamId}/like`)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: LIKE_SCREAM,\r\n          payload: res.data\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  // Unlike a scream\r\n  export const unlikeScream = (screamId) => (dispatch) => {\r\n    axios\r\n      .get(`/scream/${screamId}/unlike`)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: UNLIKE_SCREAM,\r\n          payload: res.data\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n// Submit a comment\r\nexport const submitComment = (screamId, commentData) => dispatch => {\r\n    axios.post(`/scream/${screamId}/comment`, commentData)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SUBMIT_COMMENT,\r\n            payload: res.data\r\n        })\r\n        dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n};\r\n\r\n// Delete scream\r\nexport const deleteScream = screamId => dispatch => {\r\n    axios.delete(`/scream/${screamId}`)\r\n    .then(res => {\r\n        dispatch({ \r\n            type: DELETE_SCREAM,\r\n            payload: screamId\r\n        })\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getUserData = userHandle => dispatch => {\r\n    dispatch({ type: LOADING_DATA});\r\n    axios.get(`/user/${userHandle}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: res.data.screams\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_SCREAMS,\r\n            payload: null\r\n        })\r\n    })\r\n};\r\n\r\nexport const clearErrors = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    });\r\n};","// User types\r\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\r\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const LOADING_USER = \"LOADING_USER\";\r\nexport const MARK_NOTIFICATIONS_READ = \"MARK_NOTIFICATIONS_READ\";\r\n\r\n//UI Types\r\nexport const SET_ERRORS = \"SET_ERRORS\";\r\nexport const LOADING_UI = \"LOADING_UI\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const LOADING_DATA = \"LOADING_DATA\";\r\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\r\n\r\n// Data types\r\nexport const SET_SCREAMS = \"SET_SCREAMS\";\r\nexport const SET_SCREAM = \"SET_SCREAM\";\r\nexport const LIKE_SCREAM = \"LIKE_SCREAM\";\r\nexport const UNLIKE_SCREAM = \"UNLIKE_SCREAM\";\r\nexport const DELETE_SCREAM = \"DELETE_SCREAM\";\r\nexport const POST_SCREAM = \"POST_SCREAM\";\r\nexport const SUBMIT_COMMENT = \"SUBMIT_COMMENT\";\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\r\nimport BTN from \"../../utils/Button\";\r\n\r\n//Material UI\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n\r\nconst styles = theme => ({\r\n    progressSpinner: {\r\n        position: \"absolute\"\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        left: \"90%\",\r\n        top: \"4%\",\r\n    },\r\n    submitButton: {\r\n        marginTop: \"20px\",\r\n        marginBottom: \"10px\",     \r\n        position: \"relative\",\r\n        float: \"right\"\r\n    }\r\n});\r\n\r\nclass PostScream extends Component {\r\n    state = {\r\n        open: false,\r\n        body: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n          this.setState({\r\n            errors: nextProps.UI.errors\r\n          });\r\n        }\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n          this.setState({ body: '', open: false, errors: {}  });\r\n        }\r\n      }\r\n \r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({ open: false, errors: {} });\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.postScream({ body: this.state.body });\r\n    }\r\n\r\n    render(){\r\n        const { errors } = this.state;\r\n        const { classes, UI: { loading }} = this.props;\r\n        \r\n        return (\r\n            <Fragment>\r\n                <BTN onClick={this.handleOpen} tip=\"Post a Scream!\">\r\n                    <AddIcon />\r\n                </BTN>\r\n                    <Dialog\r\n                        open={this.state.open} \r\n                        onClose={this.handleClose}\r\n                        fullWidth\r\n                        maxWidth=\"sm\"\r\n                        >\r\n                            <BTN tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                                <CloseIcon />\r\n                            </BTN>\r\n                            <DialogTitle>Post a new Scream</DialogTitle>\r\n                            <DialogContent>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <TextField\r\n                                        name=\"body\"\r\n                                        type=\"text\"\r\n                                        label=\"Enter a Scream\"\r\n                                        multiline\r\n                                        error={errors.body ? true : false} \r\n                                        helperText={errors.body}\r\n                                        className={classes.textField}\r\n                                        onChange={this.handleChange}\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"Hi, everyone!\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                          }}\r\n                                    />\r\n                                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                                        Submit\r\n                                        {loading && (\r\n                                            <CircularProgress size={30} className={classes.progressSpinner} />\r\n                                        )}\r\n                                    </Button>\r\n                                </form>\r\n                            </DialogContent>\r\n                    </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI\r\n});\r\n\r\nexport default connect(mapStateToProps, { postScream, clearErrors })(withStyles(styles)(PostScream));","import { \r\n    SET_USER, \r\n    SET_ERRORS, \r\n    CLEAR_ERRORS, \r\n    LOADING_UI, \r\n    SET_UNAUTHENTICATED, \r\n    LOADING_USER,\r\n    MARK_NOTIFICATIONS_READ\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post(\"/login\", userData)\r\n    .then(res => {\r\n        setAuthorizationHeader(res.data.token);\r\n        dispatch(getUserData());\r\n        dispatch({ type: CLEAR_ERRORS });\r\n        history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n};\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post(\"/signup\", newUserData)\r\n    .then(res => {\r\n        setAuthorizationHeader(res.data.token);\r\n        dispatch(getUserData());\r\n        dispatch({ type: CLEAR_ERRORS });\r\n        history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem(\"FBIdToken\");\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER })\r\n    axios.get(\"/user\")\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_USER,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const uploadImage = formData => dispatch => {\r\n    dispatch({ type: LOADING_USER })\r\n    axios.post(\"/user/image\", formData)\r\n    .then(res => {\r\n        dispatch(getUserData());\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const editUserDetails = userDetails => dispatch => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post(\"/user\", userDetails)\r\n    .then(() => {\r\n        dispatch(getUserData());\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const markNotificationsRead = notificationIds => dispatch => {\r\n    axios.post(\"/notifications\", notificationIds)\r\n    .then(res => {\r\n        dispatch({\r\n            type: MARK_NOTIFICATIONS_READ\r\n        })\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nconst setAuthorizationHeader = token => {\r\n    const FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem(\"FBIdToken\", FBIdToken);\r\n    axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\r\n};","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom/\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from \"../../redux/actions/userActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Material UI\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\n\r\nclass Notifications extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    }\r\n\r\n    handleOpen = e => {\r\n        this.setState({ anchorEl: e.target });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    onMenuOpened = () => {\r\n        let unreadNotificationsIds = this.props.notifications\r\n        .filter(not => !not.read)\r\n        .map(not => not.notificationId);\r\n        \r\n        this.props.markNotificationsRead(unreadNotificationsIds);\r\n    }\r\n\r\n    render() {\r\n        const notifications = this.props.notifications;\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        dayjs.extend(relativeTime);\r\n\r\n        let notificationIcon;\r\n        if (notifications && notifications.length > 0) {\r\n            notifications.filter(not => not.read === false).length > 0\r\n            ? notificationIcon = (\r\n                <Badge badgeContent={notifications.filter(not => not.read === false).length}\r\n                color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                </Badge>\r\n            ) : (\r\n                notificationIcon = <NotificationsIcon/>\r\n            )\r\n        } else {\r\n            notificationIcon = <NotificationsIcon/>\r\n        }\r\n\r\n        let notifcationsMarkup = \r\n            notifications && notifications.length > 0 ? (\r\n                notifications.map(not => {\r\n                    const verb = not.type === \"like\" ? \"liked\" : \"commented on\";\r\n                    const time = dayjs(not.createdAt).fromNow();\r\n                    const iconColor = not.read ? \"primary\" : \"secondary\";\r\n                    const icon = not.type === \"like\" ? (\r\n                        <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\r\n                    ) : (\r\n                        <ChatIcon color={iconColor} style={{ marginRight: 10 }}/>\r\n                    )\r\n\r\n                    return (\r\n                        <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n                            {icon}\r\n                            <Typography\r\n                                component={Link}\r\n                                color=\"textPrimary\"\r\n                                variant=\"body1\"\r\n                                to={`/users/${not.recipient}/scream/${not.screamId}`}\r\n                                >\r\n                                    {not.sender} {verb} your scream {time}\r\n                                </Typography>\r\n                        </MenuItem>\r\n                    )\r\n                })\r\n            ) : (\r\n                <MenuItem onClick={this.handleClose}>\r\n                    You have no notifications yet\r\n                </MenuItem>\r\n            )\r\n\r\n        return(\r\n            <Fragment>\r\n                <Tooltip placement=\"top\" title=\"Notifications\">\r\n                    <IconButton aria-owns={anchorEl ? \"simple-menu\" : undefined} aria-haspopup=\"true\" onClick={this.handleOpen}>\r\n                        {notificationIcon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleClose}\r\n                    onEntered={this.onMenuOpened}\r\n                    >\r\n                        {notifcationsMarkup}\r\n                </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    markNotificationsRead: PropTypes.func.isRequired,\r\n    notifications: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    notifications: state.user.notifications\r\n});\r\n\r\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications);","import React, { Component, Fragment } from 'react'\r\nimport { Link } from \"react-router-dom/\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport BTN from \"../../utils/Button\";\r\nimport PostScream from \"../scream/PostScream\";\r\nimport Notifications from \"./Notifications\";\r\n\r\n// MUI\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n// import Notifications from \"@material-ui/icons/Notifications\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        const { authenticated } = this.props;\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className=\"nav-container\">\r\n                    {authenticated ? (\r\n                        <Fragment>\r\n                             <PostScream />\r\n                            <Link to=\"/\">\r\n                                <BTN tip=\"Home\">\r\n                                    <HomeIcon />\r\n                                </BTN>\r\n                            </Link>\r\n                                <Notifications />\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Button color=\"inherit\" component={Link} to=\"/login\" >Login</Button>\r\n                            <Button color=\"inherit\" component={Link} to=\"/signup\" >Signup</Button>\r\n                            <Button color=\"inherit\" component={Link} to=\"/\" >Home</Button>\r\n                        </Fragment>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n const AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.user.authenticated\r\n})\r\n\r\nAuthRoute.propTypes = {\r\n  user: PropTypes.object\r\n}\r\n\r\n export default connect(mapStateToProps)(AuthRoute);","import { \r\n    SET_USER, \r\n    SET_AUTHENTICATED, \r\n    SET_UNAUTHENTICATED,\r\n    LOADING_USER,\r\n    LIKE_SCREAM,\r\n    UNLIKE_SCREAM,\r\n    MARK_NOTIFICATIONS_READ\r\n } from \"../types\";\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            }\r\n        case LOADING_USER: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                  ...state.likes,\r\n                  {\r\n                    userHandle: state.credentials.handle,\r\n                    screamId: action.payload.screamId\r\n                  }\r\n                ]\r\n              };\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(\r\n                  (like) => like.screamId !== action.payload.screamId\r\n                )\r\n              };\r\n        case MARK_NOTIFICATIONS_READ: \r\n            state.notifications.forEach(not => not.read = true);\r\n            return {\r\n                ...state\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};","import { \r\n    SET_SCREAMS, \r\n    LIKE_SCREAM, \r\n    UNLIKE_SCREAM, \r\n    LOADING_DATA, \r\n    DELETE_SCREAM,\r\n    POST_SCREAM,\r\n    SET_SCREAM,\r\n    SUBMIT_COMMENT\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_SCREAMS:\r\n            return {\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_SCREAM:\r\n            return {\r\n                ...state,\r\n                scream: action.payload\r\n            }\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex(\r\n                (scream) => scream.screamId === action.payload.screamId\r\n              );\r\n              state.screams[index] = action.payload;\r\n              if (state.scream.screamId === action.payload.screamId) {\r\n                state.scream = action.payload;\r\n              }\r\n              return {\r\n                ...state\r\n              };\r\n        case DELETE_SCREAM: \r\n            let i = state.screams.findIndex((scream) => scream.screamId === action.payload);\r\n            state.screams.splice(i, 1)\r\n            return {\r\n                ...state\r\n            }\r\n        case POST_SCREAM:\r\n            return {\r\n            ...state,\r\n            screams: [action.payload, ...state.screams]\r\n            };\r\n        case SUBMIT_COMMENT:\r\n            return {\r\n                ...state,\r\n                scream: {\r\n                    ...state.scream,\r\n                    comments: [action.payload, ...state.scream.comments]\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from \"../types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_ERRORS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case STOP_LOADING_UI: \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\nimport uiReducer from \"./reducers/uiReducer\";\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducers, \r\n    initialState, \r\n    applyMiddleware(...middleware) \r\n);\r\n\r\nexport default store;","import React, { Component, Fragment } from 'react';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport BTN from \"../../utils/Button\";\r\nimport { deleteScream } from \"../../redux/actions/dataActions\";\r\n\r\n// Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport { DialogTitle } from '@material-ui/core';\r\n\r\n\r\nconst styles = {\r\n    deleteButton: {\r\n        position: \"absolute\",\r\n        top: \"10%\",\r\n        left: \"90%\"\r\n    }\r\n}\r\n\r\nclass DeleteScream extends Component {\r\n    state = {\r\n        open: false\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    deleteScream = () => {\r\n        this.props.deleteScream(this.props.screamId);\r\n        this.setState({ open: false })\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <BTN \r\n                tip=\"Delete Scream\"\r\n                onClick={this.handleOpen}\r\n                btnClassName={classes.deleteButton}\r\n                >\r\n                    <DeleteOutline color=\"action\" />\r\n                </BTN>\r\n                <Dialog \r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                    >\r\n                        <DialogTitle>\r\n                            Are you sure you want to delete this scream?\r\n                        </DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} variant=\"contained\" color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.deleteScream} variant=\"contained\" color=\"primary\">\r\n                                Delete\r\n                            </Button>\r\n                        </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n    deleteScream: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteScream })(withStyles(styles)(DeleteScream))\r\n","import React, { Component, Fragment } from 'react';\r\nimport BTN from \"../../utils/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { likeScream, unlikeScream } from \"../../redux/actions/dataActions\";\r\n\r\n//Material UI\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\n\r\nclass LikeButton extends Component {\r\n    state = {\r\n        anchorEl: null \r\n    }\r\n\r\n    handleMenu = e => {\r\n        this.setState({ anchorEl: e.currentTarget})\r\n    }; \r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    likedScream = () => {\r\n        if (this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.screamId))\r\n        return true;\r\n        else return false\r\n    };\r\n\r\n    likeScream = () => {\r\n        this.props.likeScream(this.props.screamId);\r\n    };\r\n\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.screamId);\r\n    };\r\n    \r\n    render() {\r\n        const anchorEl = this.state.anchorEl;\r\n        const { authenticated } = this.props.user;\r\n\r\n        const likeButton = !authenticated ? (\r\n            <Fragment>\r\n                <BTN tip=\"Like\" onClick={this.handleMenu}>\r\n                    <FavoriteBorder  style={{ fontSize: \"20px\"}} color=\"primary\" />\r\n                </BTN>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleClose}\r\n                    onEntered={this.onMenuOpened}\r\n                    >\r\n                       <MenuItem color=\"primary\" onClick={this.handleClose}>\r\n                            <Link style={{color: \"#3b82c6\"}} to=\"/login\">Sign in to like</Link>\r\n                        </MenuItem> \r\n                </Menu>\r\n                \r\n            </Fragment>\r\n            \r\n        ) : this.likedScream() ? (\r\n                <BTN tip=\"Undo Like\" onClick={this.unlikeScream}>\r\n                    <FavoriteIcon  style={{ fontSize: \"20px\"}} color=\"secondary\" />\r\n                </BTN>\r\n        ) : (\r\n                <BTN tip=\"Like\" onClick={this.likeScream}>\r\n                    <FavoriteBorder  style={{ fontSize: \"20px\"}} color=\"primary\" />\r\n                </BTN>\r\n        );\r\n\r\n        return likeButton;\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    likeScream: PropTypes.func.isRequired,\r\n    unlikeScream: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionsToProps = { \r\n    likeScream,\r\n    unlikeScream\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n\r\n//Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst styles = theme => ({\r\n    commentImage: {\r\n        maxWidth: \"100%\",\r\n        height: 100,\r\n        objectFit: \"cover\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    main: {\r\n      padding: \"0px 20px\",\r\n      marginBottom: \"10px\"\r\n    },\r\n    hiddenHR: {\r\n        border: \"none\",\r\n        margin: \"4px\"\r\n    },\r\n    commentData: {\r\n        marginLeft: 20\r\n    },\r\n    HRVisible: {\r\n        width: \"100%\",\r\n        borderBottom: \"1px solid rgba(0,0,0,0,1\",\r\n        marginBottom: 20\r\n    }\r\n});\r\n\r\nclass Comments extends Component {\r\n    render() {\r\n\r\n        const { classes, comments } = this.props;\r\n        return(\r\n            <Grid container className={classes.main}>\r\n                {comments.map((comment, index) => {\r\n                    const { body, createdAt, userImage, userHandle } = comment;\r\n                    return(\r\n                        <Fragment key={createdAt}>\r\n                      \r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage} />\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}> \r\n                                            <Typography\r\n                                                variant=\"body1\"\r\n                                                component={Link}\r\n                                                to={`/users/${userHandle}`}\r\n                                                color=\"primary\"\r\n                                            >\r\n                                                @{userHandle}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\r\n                                            </Typography>\r\n                                            <hr className={classes.hiddenHR} />\r\n                                            <Typography variant=\"h6\">{body}</Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length -1 && (\r\n                                <hr className={classes.HRVisible}/>\r\n                            )}\r\n                        </Fragment> \r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport { submitComment } from \"../../redux/actions/dataActions\";\r\n\r\n//Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: 10\r\n    }\r\n});\r\n\r\nclass CommentForm extends Component {\r\n    state = {\r\n        body: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors})\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ body: \"\",  errors: {} })\r\n        }\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.submitComment(this.props.screamId, { body: this.state.body });\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const { classes, authenticated } = this.props;\r\n        const errors = this.state.errors;\r\n\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{textAlign: \"center\"}}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField \r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        label=\"Comment on this Scream\"\r\n                        error={errors.comment ? true: false}\r\n                        helperText={errors.comment} \r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                        fullWidth\r\n                        className={classes.textField}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Hi, everyone!\"\r\n                        InputLabelProps={{shrink: true}}\r\n                    />\r\n                    <Button \r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n                \r\n            </Grid>\r\n        ) : null;\r\n\r\n        return commentFormMarkup;\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\r\nimport BTN from \"../../utils/Button\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport Comments from \"./Comments\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\n// Material UI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\n\r\nconst styles = theme => ({\r\n    hiddenHR: {\r\n        border: \"none\",\r\n        margin: \"4px\"\r\n    },\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: \"50%\",\r\n        objectFit: \"cover\"\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        left: \"90%\"\r\n    },\r\n    load: {\r\n        margin: \"auto\"\r\n    },\r\n    expandButton: {\r\n        position: \"absolute\",\r\n        left: \"90%\"\r\n    },\r\n    HRVisible: {\r\n        width: \"100%\",\r\n        borderBottom: \"1px solid rgba(0,0,0,0,1\",\r\n        marginBottom: 20\r\n    }\r\n});\r\n\r\nclass ScreamDialog extends Component {\r\n    state = {\r\n        open: false,\r\n        oldPath: \"\",\r\n        newPath: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.openDialog) {\r\n            this.handleOpen();\r\n        }\r\n    };\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n        const { userHandle, screamId } = this.props;\r\n        const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n\r\n        if(oldPath === newPath) oldPath = `/users/${userHandle}`;\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({ open: true, oldPath, newPath });   \r\n        this.props.getScream(this.props.screamId);     \r\n    };\r\n\r\n    handleClose= () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n\r\n        this.setState({ open: false });  \r\n        this.props.clearErrors();      \r\n    }\r\n\r\n    render() {\r\n        const { \r\n            classes, \r\n            scream: { \r\n                screamId, \r\n                body, \r\n                createdAt, \r\n                likeCount, \r\n                userImage, \r\n                userHandle,\r\n                commentCount,\r\n                comments\r\n            }, \r\n            UI: { loading }\r\n        } = this.props;\r\n\r\n        const dialogMarkup = loading ? (\r\n            <Grid container>\r\n                <CircularProgress className={classes.load} size={50} />\r\n            </Grid>\r\n            \r\n        ) : (\r\n            <Grid container spacing={5}>\r\n                <Grid item sm={5}>\r\n                    <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\r\n                </Grid>\r\n                <Grid item sm={7}>\r\n                    <Typography\r\n                        component={Link}\r\n                        color=\"primary\"\r\n                        variant=\"body1\"\r\n                        to={`/users/${userHandle}`}\r\n                    >\r\n                        @{userHandle}\r\n                    </Typography>\r\n                    \r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format(\"h:mm a, MMM DD YYYY\")}\r\n                    </Typography>\r\n                    <hr className={classes.hiddenHR} />\r\n                    <Typography variant=\"h6\">\r\n                        {body}\r\n                    </Typography>\r\n                    \r\n                </Grid>\r\n                <CommentForm screamId={screamId} />\r\n                <Comments comments={comments} /> \r\n            </Grid>\r\n        )\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <BTN onClick={this.handleOpen} tip=\"Expand Scream\" tipClassName={classes.expandButton}>\r\n                    <UnfoldMore color=\"primary\" />\r\n                </BTN>\r\n\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                >\r\n                    <BTN\r\n                        tip=\"Close\"\r\n                        onClick={this.handleClose}\r\n                        tipClassName={classes.closeButton}\r\n                    >\r\n                        <CloseIcon />\r\n                    </BTN>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    userHandle: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","import React, { Component } from 'react';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Link } from \"react-router-dom/\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport BTN from \"../../utils/Button\";\r\nimport DeleteScream from \"./DeleteScream\";\r\nimport ScreamDialog from \"./ScreamDialog\";\r\nimport LikeButton from \"./LikeButton\";\r\n\r\n// Material UI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\n\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: \"cover\"\r\n    },\r\n    hiddenHR: {\r\n        border: \"none\",\r\n        margin: \"4px\"\r\n    }\r\n}\r\n\r\nclass Scream extends Component {\r\n\r\n    render() {\r\n\r\n        dayjs.extend(relativeTime)\r\n        const { classes, \r\n            scream : { \r\n                body, \r\n                createdAt, \r\n                userImage, \r\n                userHandle, \r\n                screamId, \r\n                likeCount, \r\n                commentCount \r\n            },\r\n            user: {\r\n                authenticated,\r\n                credentials: { handle }\r\n            } \r\n        } = this.props;\r\n\r\n\r\n        const deleteButton = authenticated && userHandle === handle ? (\r\n            <DeleteScream screamId={screamId} />\r\n        ) : null\r\n        \r\n        return (\r\n            <Card className={classes.card}> \r\n                <CardMedia \r\n                    image={userImage}\r\n                    title=\"Profile image\" \r\n                    className={classes.image}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography color=\"primary\" variant=\"h6\" component={Link} to={`/users/${userHandle}`}>@{userHandle}</Typography>\r\n                    {deleteButton}\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n                    <hr className={classes.hiddenHR} />\r\n                    <Typography variant=\"h6\">{body}</Typography>\r\n                    <hr className={classes.hiddenHR} />\r\n                    <LikeButton screamId={screamId} />\r\n                    <small><span>{likeCount} {likeCount === 1 ? \"Like\" : \"Likes\"}</span></small>\r\n                    <BTN tip=\"comments\">\r\n                        <ChatIcon style={{ fontSize: \"20px\"}}  color=\"primary\" />\r\n                    </BTN>\r\n                    <small><span>{commentCount} {commentCount === 1 ? \"Comment\" : \"Comments\"}</span></small>\r\n                    <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={this.props.openDialog} />\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport { editUserDetails } from \"../../redux/actions/userActions\";\r\n\r\n//Material UI\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        marginTop: \"15px\"\r\n    },\r\n    button: {\r\n        float: \"right\",\r\n    },\r\n    edit: {\r\n\r\n    }\r\n});\r\n\r\nclass EditDetails extends Component {\r\n    state = {\r\n        bio: \"\",\r\n        website: \"\",\r\n        location: \"\",\r\n        open: false\r\n    };\r\n\r\n    mapUserDetailsToState = credentials => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : \"\",\r\n            website: credentials.website ? credentials.website : \"\",\r\n            location: credentials.location ? credentials.location : \"\",\r\n        });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { credentials } = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        };\r\n        console.log(userDetails)\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <Tooltip title=\"Edit Details\" placement=\"top\">\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleOpen} className={classes.button}>\r\n                        Edit Details\r\n                    </Button>\r\n                </Tooltip>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                >\r\n                        <DialogTitle>Edit your details</DialogTitle>\r\n                        <DialogContent>\r\n                            <form>\r\n                                <TextField\r\n                                    name=\"bio\"\r\n                                    type=\"text\"\r\n                                    label=\"Bio\"\r\n                                    multiline\r\n                                    placeholder=\"A short bio about yourself\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.bio}\r\n                                    onChange={this.handleChange}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                />\r\n                                \r\n                                <TextField\r\n                                    name=\"website\"\r\n                                    type=\"text\"\r\n                                    label=\"Website\"\r\n                                    placeholder=\"Your website\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.website}\r\n                                    onChange={this.handleChange}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                />\r\n                                \r\n                                <TextField\r\n                                    name=\"location\"\r\n                                    type=\"text\"\r\n                                    label=\"Location\"\r\n                                    placeholder=\"Your Location\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.location}\r\n                                    onChange={this.handleChange}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                />\r\n                            </form>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\" variant=\"contained\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.handleSubmit} color=\"primary\" variant=\"contained\">\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    credentials: state.user.credentials\r\n});\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n// Material UI\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: 20\r\n      },\r\n      profile: {\r\n        '& .image-wrapper': {\r\n          position: \"relative\",\r\n          textAlign: 'center',\r\n          marginBottom: \"20px\",\r\n          '& .button': {\r\n            boxShadow: \"1px 2px 3px grey\",\r\n            cursor: \"pointer\",\r\n            position: 'absolute',\r\n            top: '185px',\r\n            left: \"36%\"\r\n          }\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%',\r\n        },\r\n        '& .profile-details': {\r\n          marginBottom: \"20px\",\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: theme.palette.primary.main\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n          '&:hover': {\r\n            cursor: 'pointer'\r\n          }\r\n        }\r\n      },\r\n      buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n          margin: '20px 10px'\r\n        }\r\n      },\r\n    handle: {\r\n        height: 20,\r\n        backgroundColor: \"#3b82c6\",\r\n        width: 60,\r\n        margin: \"0 auto 7px auto\",\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        backgroundColor: \"rgba(0,0,0,0.4)\",\r\n        width: \"100%\",\r\n        marginBottom: 10\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        backgroundColor: \"rgba(0,0,0,0.4)\",\r\n        width: \"50%\",\r\n        margin: \"auto\",\r\n        marginBottom: 10,\r\n    }\r\n});\r\n\r\nconst  ProfileSkeleton = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={\"https://firebasestorage.googleapis.com/v0/b/socialapi-e127d.appspot.com/o/no-image.png?alt=media\"} alt=\"profile\" className=\"profile-image\"/>\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <div className={classes.handle} />\r\n                    <hr />\r\n                    <div className={classes.fullLine} />\r\n                    <div className={classes.fullLine} />\r\n                    <hr />\r\n                    <div className={classes.halfLine} />\r\n                    <hr />\r\n                    <div className={classes.halfLine} />\r\n                    <hr />\r\n                    <div className={classes.halfLine} />\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nProfileSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ProfileSkeleton);\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser, uploadImage } from \"../../redux/actions/userActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport EditDetails from \"../profile/EditDetails\";\r\nimport ProfileSkeleton from \"../../utils/ProfileSkeleton\";\r\nimport BTN from \"../../utils/Button\";\r\n\r\n\r\n// Material UI\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      padding: 20\r\n    },\r\n    profile: {\r\n         '& .image-wrapper': {\r\n      textAlign: 'center',\r\n      position: 'relative',\r\n      '& button': {\r\n        position: 'absolute',\r\n        top: '80%',\r\n        left: '70%'\r\n      }\r\n    },\r\n    '& .profile-image': {\r\n      width: 200,\r\n      height: 200,\r\n      objectFit: 'cover',\r\n      maxWidth: '100%',\r\n      borderRadius: '50%'\r\n    },\r\n      '& .profile-details': {\r\n        marginBottom: \"20px\",\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: theme.palette.primary.main\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    }\r\n  });\r\n\r\nclass Profile extends Component {\r\n\r\n    handleImageChange = e => {\r\n        const image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image, image.name);\r\n        this.props.uploadImage(formData);\r\n    };\r\n\r\n    handleEditImage = () => {\r\n        const fileInput = document.getElementById(\"imageInput\");\r\n        fileInput.click();\r\n    };\r\n\r\n    handleLogout = () => {\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            classes, \r\n            user: { \r\n                credentials: {handle, createdAt, imageUrl, bio, website, location }, \r\n                loading,\r\n                authenticated\r\n            }\r\n        } = this.props;\r\n\r\n        let profileMarkup = !loading ? (\r\n            \r\n            authenticated ? (\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <div className=\"image-wrapper\">\r\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"imageInput\" \r\n                            hidden=\"hidden\"\r\n                            onChange={this.handleImageChange} \r\n                        />\r\n                        <BTN \r\n                            tip=\"Edit Profile Picture\"\r\n                            onClick={this.handleEditImage}\r\n                            btnClassName=\"button\">\r\n                                <EditIcon color=\"primary\" />\r\n                        </BTN>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"profile-details\">\r\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                            @{handle}\r\n                        </MuiLink>\r\n                        <hr />\r\n                        {bio && <Typography variant=\"body2\">{bio}</Typography> }\r\n                        <hr />\r\n                        { location && (\r\n                            <Fragment>\r\n                                <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                                <hr />\r\n                            </Fragment>\r\n                        )}\r\n                        {website && (\r\n                            <Fragment>\r\n                                <LinkIcon color=\"primary\" />\r\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    {\" \"}{website}\r\n                                </a>\r\n                                <hr />\r\n                            </Fragment>\r\n                        )}\r\n                        <CalendarToday color=\"primary\"/>{\" \"}\r\n                        <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n                    </div>\r\n                    <Tooltip title=\"Logout\" placement=\"top\">\r\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleLogout} href=\"/login\">\r\n                            logout\r\n                        </Button>\r\n                    </Tooltip>\r\n                    <EditDetails />\r\n                </div>\r\n            </Paper>\r\n        ) : (\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    No profile found, please login\r\n                </Typography>\r\n                <div className={classes.buttons}>\r\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\r\n                        Login\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/signup\">\r\n                        Signup\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        )) : (\r\n            <ProfileSkeleton />\r\n        )\r\n\r\n        return profileMarkup;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionsToProps = { logoutUser, uploadImage };\r\n\r\nProfile.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    uploadImage: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile));\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n// Material UI\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n    },\r\n    cardContent: {\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n        padding: 25\r\n    },\r\n    cover: {\r\n        minWidth: 200,\r\n        objectFit: \"cover\"\r\n    },\r\n    handle: {\r\n        width: 60,\r\n        height: 18,\r\n        backgroundColor: \"#3b82c6\",\r\n        marginBottom: 7\r\n    },\r\n    date: {\r\n        height: 14,\r\n        width: 100,\r\n        backgroundColor: \"rgba(0,0,0, 0.3)\",\r\n        marginBottom: 10\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        width: \"90%\",\r\n        backgroundColor: \"rgba(0,0,0, 0.3)\",\r\n        marginBottom: 10\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        backgroundColor: \"rgba(0,0,0, 0.3)\",\r\n        width: \"50%\",\r\n        marginBottom: 10\r\n    }\r\n});\r\n\r\nconst ScreamSkeleton = props => {\r\n    const { classes } = props;\r\n\r\n    const content = Array.from({ length: 5 }).map((item, index) => (\r\n        <Card className={classes.card} key={index}>\r\n            <CardMedia className={classes.cover} image={\"https://firebasestorage.googleapis.com/v0/b/socialapi-e127d.appspot.com/o/no-image.png?alt=media\"} />\r\n            <CardContent className={classes.cardContent}>\r\n                <div className={classes.handle}/>\r\n                <div className={classes.date}/>\r\n                <div className={classes.fullLine}/>\r\n                <div className={classes.fullLine}/>\r\n                <div className={classes.halfLine}/>\r\n            </CardContent>\r\n        </Card>\r\n    ))\r\n\r\n    return <Fragment>{content}</Fragment>\r\n};\r\n\r\nScreamSkeleton.propTypes = { \r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ScreamSkeleton);","import React, { Component } from 'react'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from \"prop-types\";\r\nimport Scream from \"../components/scream/Scream\";\r\nimport Profile from \"../components/profile/Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getScreams } from \"../redux/actions/dataActions\";\r\nimport ScreamSkeleton from \"../utils/ScreamSkeleton\";\r\n\r\nexport class home extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getScreams();\r\n    };\r\n\r\n    render() {\r\n        const { screams, loading } = this.props.data;\r\n        let recentScreams = !loading ? (\r\n            screams.map((scream, i) => <Scream key={scream.screamId} scream={scream}/>)\r\n        ) : (\r\n            <ScreamSkeleton />\r\n        )\r\n\r\n        return (\r\n            <Grid container spacing={3}>\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile />\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    {recentScreams}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nhome.propTypes = {\r\n    getScreams: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getScreams })(home);","import React, { Component } from 'react'\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userActions\";\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: \"center\"\r\n    },\r\n    image: {\r\n        margin: \"20px auto 20px auto\",\r\n        width: \"125px\"\r\n    },\r\n    pageTitle: {\r\n        margin: \"10px auto 0px auto\",\r\n        fontSize: 50,\r\n        color: \"#1D2B48\"\r\n    },\r\n    textField: {\r\n        margin: \"10px auto 10px auto\"\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        position: \"relative\"\r\n    },\r\n    customError: {\r\n        color: \"red\",\r\n        fontSize: \"0.8rem\"\r\n    },\r\n    progress: {\r\n        position: \"absolute\"\r\n    },\r\n    signupRedirect: {\r\n        color: \"#3b82c6\",\r\n    }\r\n}\r\n\r\nclass login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n          this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData, this.props.history)\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    render() {        \r\n        const { classes, UI: { loading } } = this.props; \r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        ECSTATIC\r\n                    </Typography>\r\n                    <img className={classes.image} src={\"https://firebasestorage.googleapis.com/v0/b/socialapi-e127d.appspot.com/o/megaphone.png?alt=media\"} alt=\"login icon\" />\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        ></TextField>\r\n\r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        ></TextField>\r\n\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Login\r\n                            {loading && (\r\n                                <CircularProgress size={30} className={classes.progress} />\r\n                            )}\r\n                        </Button>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <small>Dont' have an account? <Link className={classes.signupRedirect} to=\"/signup\"><b>Sign up</b></Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nlogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login))\r\n","import React, { Component } from 'react'\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n// Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { signupUser } from \"../redux/actions/userActions\";\r\n \r\nconst styles = {\r\n    form: {\r\n        textAlign: \"center\"\r\n    },\r\n    image: {\r\n        margin: \"20px auto 20px auto\",\r\n        width: \"125px\"\r\n    },\r\n    pageTitle: {\r\n        margin: \"10px auto 0px auto\",\r\n        fontSize: 50,\r\n        color: \"#1D2B48\"\r\n    },\r\n    textField: {\r\n        margin: \"10px auto 10px auto\"\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        position: \"relative\"\r\n    },\r\n    customError: {\r\n        color: \"red\",\r\n        fontSize: \"0.8rem\"\r\n    },\r\n    progress: {\r\n        position: \"absolute\"\r\n    },\r\n    signupRedirect: {\r\n        color: \"#3b82c6\",\r\n    }\r\n};\r\n\r\n\r\nclass signup extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        handle: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n          this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true });\r\n\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        }\r\n        this.props.signupUser(newUserData, this.props.history)\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes, UI: { loading } } = this.props; \r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        ECSTATIC\r\n                    </Typography>\r\n                    <img className={classes.image} src={\"https://firebasestorage.googleapis.com/v0/b/socialapi-e127d.appspot.com/o/megaphone.png?alt=media\"} alt=\"login icon\" />\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        ></TextField>\r\n\r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        ></TextField>\r\n\r\n                        <TextField \r\n                            id=\"confirmPassword\" \r\n                            name=\"confirmPassword\" \r\n                            type=\"password\" \r\n                            label=\"Confirm Password\" \r\n                            className={classes.textField}\r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        ></TextField>\r\n\r\n                        <TextField \r\n                            id=\"handle\" \r\n                            name=\"handle\" \r\n                            type=\"text\" \r\n                            label=\"Username\" \r\n                            className={classes.textField}\r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        ></TextField>\r\n\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Signup\r\n                            {loading && (\r\n                                <CircularProgress size={30} className={classes.progress} />\r\n                            )}\r\n                        </Button>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        \r\n                        <small>Already have an account? <Link className={classes.signupRedirect} to=\"/login\"><b>Login</b></Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(signup));\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Material UI\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      padding: 20\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        position: \"relative\",\r\n        textAlign: 'center',\r\n        marginBottom: \"20px\",\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%',\r\n      },\r\n      '& .profile-details': {\r\n        marginBottom: \"20px\",\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: theme.palette.primary.main\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      }\r\n    }\r\n  });\r\n\r\n\r\nconst StaticProfile = props => {\r\n    const { \r\n        classes, \r\n        profile: {\r\n            handle,\r\n            createdAt,\r\n            imageUrl,\r\n            bio,\r\n            website,\r\n            location\r\n        }\r\n    } = props;\r\n\r\n    return ( \r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    <hr />\r\n                    {bio && <Typography variant=\"body2\">{bio}</Typography> }\r\n                    <hr />\r\n                    { location && (\r\n                        <Fragment>\r\n                            <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color=\"primary\" />\r\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {\" \"}{website}\r\n                            </a>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarToday color=\"primary\"/>{\" \"}\r\n                    <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(StaticProfile);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport Scream from \"../components/scream/Scream\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserData } from \"../redux/actions/dataActions\";\r\nimport StaticProfile from \"../components/profile/StaticProfile\";\r\nimport ScreamSkeleton from \"../utils/ScreamSkeleton\";\r\nimport ProfileSkeleton from \"../utils/ProfileSkeleton\";\r\n\r\n//Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass user extends Component {\r\n    state = {\r\n        profile: null,\r\n        screamIdParam: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        const handle = this.props.match.params.handle;\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        if (screamId) this.setState({ screamIdParam: screamId});\r\n\r\n        this.props.getUserData(handle);\r\n        axios.get(`/user/${handle}`)\r\n        .then(res => {\r\n            this.setState({\r\n                profile: res.data.user\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        const { screams, loading } = this.props.data;\r\n        const { screamIdParam } = this.state;\r\n\r\n        const screamsMarkup = loading ? (\r\n            <ScreamSkeleton />\r\n        ) : screams === null ? (\r\n            <p>No screams from this user</p>\r\n        ) : !screamIdParam ? (\r\n            screams.map(scream => <Scream key={scream.screamId} scream={scream} /> )\r\n        ) : (\r\n            screams.map(scream => {\r\n                if(scream.screamId !== screamIdParam)\r\n                return <Scream key={scream.screamId} scream={scream} />\r\n                else return <Scream key={scream.screamId} scream={scream} openDialog />\r\n            })\r\n        )\r\n\r\n        return (\r\n            <Grid container spacing={3}>\r\n                <Grid item sm={4} xs={12}>\r\n                    {this.state.profile === null ? (\r\n                        <ProfileSkeleton />\r\n                    ) : (\r\n                        <StaticProfile profile={this.state.profile} />\r\n                    )}\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    {screamsMarkup}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, {getUserData})(user);\r\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './App.css';\nimport themeFile from \"./utils/theme\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\nimport jwtDecode from \"jwt-decode\";\nimport Navbar from \"./components/layout/Navbar\";\nimport AuthRoute from \"./utils/AuthRoute\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\";\n\n// Pages\nimport home from \"./pages/home\";\nimport login from \"./pages/login\";\nimport signup from \"./pages/signup\";\nimport user from \"./pages/user\";\n\n\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL = \"https://us-central1-socialapi-e127d.cloudfunctions.net/api\";\n\n\nconst token = localStorage.FBIdToken;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser())\n    window.location.href=\"/login\"\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n      return (\n        <Fragment>\n          <MuiThemeProvider theme={theme}>\n            <Provider store={store}>\n              <Router>\n                <Navbar />\n                <div className=\"container\">\n                  <Switch>\n                    <Route exact path=\"/\" component={home} />\n                    <AuthRoute exact path=\"/login\" component={login} />\n                    <AuthRoute exact path=\"/signup\" component={signup} />\n                    <Route exact path=\"/users/:handle\" component={user} />\n                    <Route exact path=\"/users/:handle/scream/:screamId\" component={user} />\n                  </Switch>\n                </div>\n              </Router>\n            </Provider>\n          </MuiThemeProvider>\n\n          <footer className=\"footer\">\n            <div className=\"container\">\n                <span><a href=\"https://github.com/MMthree\" target=\"__blank\" className=\"text-muted\">GitHub@MMthree <i className=\"fab fa-github\"></i></a></span>\n            </div>\n          </footer>\n        </Fragment>\n        \n    );\n  }\n}\n\nexport default App;\n","export default {\r\n    palette: {\r\n      primary: {\r\n        light: \"#50a9fd\",\r\n        main: \"#3b82c6\",\r\n        dark: \"#2363a1\",\r\n        contrastText: \"#fff\"\r\n      },\r\n      secondary: {\r\n        light: \"#ff4081\",\r\n        main: \"#f50057\",\r\n        dark: \"#005eda\",\r\n        contrastText: \"#fff\"\r\n      }\r\n    },\r\n    typography: {\r\n      useNextVariants: true\r\n    },\r\n    // form: {\r\n    //   textAlign: \"center\"\r\n    // },\r\n    // image: {\r\n    //     margin: \"20px auto 20px auto\",\r\n    //     width: \"100px\"\r\n    // },\r\n    // pageTitle: {\r\n    //     margin: \"10px auto 10px auto\"\r\n    // },\r\n    // textField: {\r\n    //     margin: \"10px auto 10px auto\"\r\n    // },\r\n    // button: {\r\n    //     marginTop: 20,\r\n    //     position: \"relative\"\r\n    // },\r\n    // customError: {\r\n    //     color: \"red\",\r\n    //     fontSize: \"0.8rem\"\r\n    // },\r\n    // progress: {\r\n    //     position: \"absolute\"\r\n    // },\r\n    // signupRedirect: {\r\n    //     color: \"#5252d4\",\r\n    // }\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}